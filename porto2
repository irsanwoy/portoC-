#include<iostream>
#include <iomanip>
using namespace std;

struct Todolist
{
    string judul;
    string deskripsi;

    Todolist *next;
}*head,*tail,*newNode,*cur,*del,*before;

void buatTodolist(string judul, string deskripsi){
    head = new Todolist();
    head->judul = judul;
    head->deskripsi = deskripsi;
    head->next = NULL;
    tail = head;
}

int countSingleLinkedList(){
    cur = head;
    int jumlah = 0;
    while( cur != NULL ){
        jumlah++;
        cur = cur->next;
    }
    return jumlah;
}

void tambahAwal(string judul, string deskripsi){
    newNode = new Todolist();
    newNode->judul = judul;
    newNode->deskripsi = deskripsi;
    newNode->next = head;
    head = newNode;
}

void tambahAkhir(string judul, string deskripsi){
    newNode = new Todolist();
    newNode->judul = judul;
    newNode->deskripsi = deskripsi;
    newNode->next = NULL;
    tail->next = newNode;
    tail = newNode;
}

void tambahTengah(string judul, string deskripsi, int posisi){
    if( posisi < 1 || posisi > countSingleLinkedList() ){
        cout << "Posisi diluar jangkauan" << endl;
    }else if( posisi == 1){
        cout << "Posisi bukan posisi tengah" << endl;
    }else{
        newNode = new Todolist();
        newNode->judul = judul;
        newNode->deskripsi = deskripsi;
        cur = head;
        int nomor = 1;
        while( nomor < posisi - 1 ){
            cur = cur->next;
            nomor++;
        }
        newNode->next = cur->next;
        cur->next = newNode;
    }
}

void hapusAwal(){
    del = head;
    head = head->next;
    delete del;
}

void hapusAkhir(){
    del = tail;
    cur = head;
    while(cur->next != tail){
        cur = cur->next;
    }
    tail = cur;
    tail->next = NULL;
    delete del;
}

void hapusTengah(int posisi){
    if( posisi < 1 || posisi > countSingleLinkedList() ){
        cout << "Posisi diluar jangkauan" << endl;
    }else if( posisi == 1){
        cout << "Posisi bukan posisi tengah" << endl;
    }else{
        int nomor = 1;
        cur = head;
        while( nomor <= posisi ){
            if( nomor == posisi-1 ){
                before = cur;
            }
            if( nomor == posisi ){
                del = cur;
            }
            cur = cur->next;
            nomor++;
        }
        before->next = cur;
        delete del;
    }
}

void ubahAwal(string judul, string deskripsi){
    head->judul = judul;
    head->deskripsi = deskripsi;
}

void ubahAkhir(string judul, string deskripsi){
    cur = tail;
    cur->judul = judul;
    cur->deskripsi = deskripsi;
}

void ubahTengah(string judul, string deskripsi, int posisi){
    if( posisi < 1 || posisi > countSingleLinkedList() ){
        cout << "Posisi diluar jangkauan" << endl;
    }else if( posisi == 1 || posisi == countSingleLinkedList() ){
        cout << "Posisi bukan posisi tengah" << endl;
    }else{
        cur = head;
        int nomor = 1;
        while( nomor < posisi ){
            cur = cur->next;
            nomor++;
        }
        cur->judul = judul;
        cur->deskripsi = deskripsi;
    }
}

void lihatTodolist() {
    cur = head;
    cout << "*********************************" << endl;
    cout << "*            TODOLIST           *" << endl;
    cout << "*********************************" << endl;
    while (cur != NULL) {
        cout << "*********************************" << endl;
        cout << "|| Judul     : " <<  cur->judul << endl;
        cout << "|| Deskripsi : " << cur->deskripsi  << endl;
        cout << "*********************************" << endl;
        cur = cur->next;
    }
}





int main() {
    string judul;
    string deskripsi;
    int pil1, pil2,buat, posisi;

    while (true) {
        system("cls");
        lihatTodolist();
        cout << "========== Menu Utama ==========" << endl;
        cout << "1. Buat Todolist" << endl;
        cout << "2. Tambah Todolist" << endl;
        cout << "3. Hapus Todolist" << endl;
        cout << "4. Ubah Todolist" << endl;
        cout << "Masukkan pilihan anda: ";
        cin >> pil1;
        cin.ignore(); // Membersihkan buffer input

        switch (pil1) {
            case 1:
                pil2 = 1;

                if (pil2 == 1) {
                    cout << "Masukkan judul Todolist anda    : ";
                    getline(cin, judul);
                    cout << "Masukkan deskripsi Todolist anda: ";
                    getline(cin, deskripsi);
                    buatTodolist(judul, deskripsi);
                } 
                
                break;

            case 2:
                cout << "1. Tambah di awal" << endl;
                cout << "2. Tambah di akhir" << endl;
                cout << "3. Tambah di tengah" << endl;
                cout << "Pilih antara 1/2/3: ";
                cin >> pil2;
                cin.ignore(); // Membersihkan buffer input
				
                if (pil2 == 1) {
               	 cout << "Masukkan judul Todolist     : ";
               	 getline(cin, judul);
               	 cout << "Masukkan deskripsi Todolist : ";
                 getline(cin, deskripsi);
                 tambahAwal(judul, deskripsi);
                } else if (pil2 == 2) {
                	cout << "Masukkan judul Todolist     : ";
              		getline(cin, judul);
              		cout << "Masukkan deskripsi Todolist : ";
                	getline(cin, deskripsi);
               	    tambahAkhir(judul,deskripsi);
                } else if (pil2 == 3) {
                     cout << "Masukkan judul Todolist         : ";
               		 getline(cin, judul);
               		 cout << "Masukkan deskripsi Todolist     : ";
               		 getline(cin, deskripsi);
               		 cout<<"masukan posisi yang mau di tambah :";
               		 cin>>posisi;
                	 tambahTengah(judul, deskripsi,posisi);
                } else {
                    cout << "Inputan yang anda masukkan salah!" << endl;
                }
                break;

            case 3:
                cout << "1. Hapus di awal" << endl;
                cout << "2. Hapus di akhir" << endl;
                cout << "3. Hapus di tengah" << endl;
                cout << "Pilih antara 1/2/3: ";
                cin >> pil2;
            if (pil2 == 1) {
                hapusAwal();
            } else if (pil2 == 2) {
                hapusAkhir();
            } else if (pil2 == 3) {
                cout << "Masukan posisi yang akan dihapus: ";
                cin>>posisi;
                hapusTengah(posisi);
            } else {
                cout << "Inputan yang anda masukkan salah!" << endl;
            }
            break;
            
                case 4:
                cout << "1. Ubah di awal" << endl;
                cout << "2. Ubah di akhir" << endl;
                cout << "3. Ubah di tengah" << endl;
                cout << "Pilih antara 1/2/3: ";
                cin >> pil2;
                cin.ignore();
            if (pil2 == 1) {
                cout << "Masukkan judul Todolist baru     : ";
                getline(cin, judul);
                cout<<"Masukan deskripsi Todolist baru    :";
                getline(cin,deskripsi);
                cout << "Masukkan deskripsi Todolist baru : ";
                ubahAwal(judul, deskripsi);
            } else if (pil2 == 2) {
                cout << "Masukkan judul Todolist baru     : ";
                getline(cin, judul);
                cout<<"Masukan deskripsi Todolist baru    :";
                getline(cin,deskripsi);
                ubahAkhir(judul, deskripsi);
            } else if (pil2 == 3) {
                cout << "Posisi berapa yang mau diubah    : ";
                cin >> posisi;
                cin.ignore();
                cout << "Masukkan judul Todolist baru     : ";
                getline(cin, judul);
                cout << "Masukkan deskripsi Todolist baru : ";
                getline(cin, deskripsi);
                ubahTengah(judul, deskripsi, posisi);
            } else {
                cout << "Inputan yang anda masukkan salah!" << endl;
            }
            break;

        default:
            cout << "Inputan yang anda masukkan salah!" << endl;
        }
    }

    return 0;
}
